CREATE TABLE TAG (
    LABEL VARCHAR(50) PRIMARY KEY,
    CREATEUR VARCHAR(50) NOT NULL,
    CONSTRAINT FK_CREATEUR FOREIGN KEY (CREATEUR) REFERENCES UTILISATEUR(USER_LOGIN)
);

CREATE TABLE QCM (
    ID INT PRIMARY KEY,
    TITRE VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATEUR VARCHAR(50) NOT NULL,
    EST_PUBLIC BOOLEAN NOT NULL,
    CONSTRAINT FK_CREATEUR FOREIGN KEY (CREATEUR) REFERENCES UTILISATEUR(USER_LOGIN)
);

CREATE TABLE niveau (
    LABEL_TAG VARCHAR(50) NOT NULL,
    ID_QCM INT NOT NULL,
    VALEUR INT NOT NULL,
    CONSTRAINT FK_TAG_NIVEAU FOREIGN KEY (LABEL_TAG) REFERENCES TAG(LABEL),
    CONSTRAINT FK_QCM_NIVEAU FOREIGN KEY (ID_QCM)  REFERENCES QCM(ID),
    PRIMARY KEY (LABEL_TAG, ID_QCM)
);

CREATE TABLE TYPE (
    LABEL VARCHAR(25) PRIMARY KEY
);

CREATE TABLE QUESTION (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    LABEL VARCHAR(255) NOT NULL,
    ETAT VARCHAR(10) check ( ETAT in ('A_VERIFIER', 'A_MODIFIER', 'ACCEPTE') ) NOT NULL,
    TYPE VARCHAR(25) NOT NULL,
    ID_UTILISATEUR NUMBER(10) NOT NULL,
    CONSTRAINT FK_QUESTION_UTILISATEUR FOREIGN KEY (ID_UTILISATEUR) REFERENCES UTILISATEUR(USER_LOGIN),
    CONSTRAINT FK_QUESTION_TYPE FOREIGN KEY (TYPE) REFERENCES TYPE(LABEL)
);

CREATE TABLE REPONSE (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    LABEL VARCHAR(255) NOT NULL,
    ETAT_VERITE BOOLEAN NOT NULL,
    QUESTION_ID INT NOT NULL,
    CONSTRAINT FK_QUESTION_REPONSE FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION(ID)
);

CREATE TABLE entrainer (
    UTILISATEUR VARCHAR(50) NOT NULL,
    QCM INT NOT NULL,
    TEMPS_PASSE INT NOT NULL,
    SCORE NUMBER(5,2) NOT NULL,
    CONSTRAINT FK_UTILISATEUR_ENTRAINER FOREIGN KEY (UTILISATEUR) REFERENCES UTILISATEUR(USER_LOGIN),
    CONSTRAINT FK_QCM_ENTRAINER FOREIGN KEY (QCM) REFERENCES QCM(ID),
    PRIMARY KEY (UTILISATEUR, QCM)
);

CREATE TABLE composer (
    ID_QCM INT NOT NULL,
    ID_QUESTION INT NOT NULL,
    NB_TENTATIVES_TOTAL INT NOT NULL,
    NB_TENTATIVES_REUSSIES INT NOT NULL,
    CONSTRAINT FK_QCM_COMPOSER FOREIGN KEY (ID_QCM) REFERENCES QCM(ID),
    CONSTRAINT FK_QUESTION_COMPOSER FOREIGN KEY (ID_QUESTION) REFERENCES QUESTION(ID),
    PRIMARY KEY (ID_QCM, ID_QUESTION)
);

CREATE TABLE lier_tag_question (
    LABEL_TAG VARCHAR(50) NOT NULL,
    ID_QUESTION INT NOT NULL,
    CONSTRAINT FK_TAG_LIEE FOREIGN KEY (LABEL_TAG) REFERENCES TAG(LABEL),
    CONSTRAINT FK_QUESTION_LIEE FOREIGN KEY (ID_QUESTION) REFERENCES QUESTION(ID),
    PRIMARY KEY (LABEL_TAG, ID_QUESTION)
);


ALTER TABLE DEPOT
RENAME COLUMN id TO ID;
ALTER TABLE DEPOT
RENAME COLUMN title TO TITRE;
ALTER TABLE DEPOT
RENAME COLUMN description TO DESCRIPTION;
ALTER TABLE DEPOT
RENAME COLUMN dateOuverture TO DATE_OUVERTURE;
ALTER TABLE DEPOT
RENAME COLUMN dateFermeture TO DATE_FERMETURE;

ALTER TABLE accessDepot
RENAME COLUMN idDepot TO ID;
ALTER TABLE accessDepot
RENAME COLUMN idUser TO ID_UTILISATEUR;
ALTER TABLE accessDepot
RENAME COLUMN aAcces TO A_ACCES;
ALTER TABLE accessDepot
RENAME TO acces_depot;

CREATE TABLE contenir (
    ID_QUESTION INT NOT NULL,
    ID_DEPOT INT NOT NULL,
    CONSTRAINT FK_QUESTION_CONTENIR FOREIGN KEY (ID_QUESTION) REFERENCES QUESTION(ID),
    CONSTRAINT FK_DEPOT_CONTENIR FOREIGN KEY (ID_DEPOT) REFERENCES DEPOT(ID)
);